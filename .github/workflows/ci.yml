name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10, 3.11, 3.12]
        parsing: [true, false]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ "${{ matrix.parsing }}" = "true" ]; then
            # Install core deps and extras for parsing (sqlparse) and DB drivers using pinned constraints
            python -m pip install -c requirements-constraints.txt -e ".[parsing,postgresql,mysql,mssql]" || python -m pip install -c requirements-constraints.txt -e .
          else
            # Install core deps without parsing extras
            python -m pip install -c requirements-constraints.txt -e .
          fi
          python -m pip install -c requirements-constraints.txt pytest

      - name: Run tests
        run: |
          pytest -q

  integration:
    runs-on: ubuntu-latest
    needs: test
    env:
      DB_TYPE: postgresql
      DB_HOST: 127.0.0.1
      DB_PORT: 5432
      DB_USER: sqlmcp
      DB_PASS: sqlmcp
      DB_NAME: sql_mcp_test
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: sqlmcp
          POSTGRES_PASSWORD: sqlmcp
          POSTGRES_DB: sql_mcp_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready -U sqlmcp -d sql_mcp_test
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Wait for Postgres
        run: |
          for i in {1..30}; do
            pg_isready -h ${DB_HOST} -p ${DB_PORT} -U ${DB_USER} && break
            echo "Waiting for Postgres..."
            sleep 2
          done

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # integration requires parsing extras for accuracy
          python -m pip install -c requirements-constraints.txt -e ".[parsing,postgresql]" || python -m pip install -c requirements-constraints.txt -e .
          python -m pip install -c requirements-constraints.txt pytest

      - name: Run integration tests
        run: |
          pytest -q -m integration
